name: CI

on:
    pull_request:
    push:

jobs:
    check_composer:
        name: Check composer.json
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: shivammathur/setup-php@v2
              with:
                  coverage: none
                  php-version: '7.4'
            - run: composer validate --strict --no-check-lock

    tests:
        name: "Tests on PHP ${{ matrix.php }}${{ matrix.name_suffix }}"
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
                php: [ '7.2', '7.3', '7.4', '8.0', '8.1' ]
                min_stability: [ '' ]
                name_suffix: [ '' ]
                composer_flags: [ '' ]
                symfony_version: [ '' ]
                include:
                    - php: '7.4'
                      min_stability: 'dev'
                      name_suffix: ' (dev deps)'
                    - php: '7.2'
                      min_stability: ''
                      name_suffix: ' (lowest deps)'
                      composer_flags: '--prefer-lowest'
                    - php: '7.4'
                      name_suffix: ' (Symfony LTS 4.x)'
                      symfony_version: '^4.4'

        steps:
            -   uses: actions/checkout@v2
            -   uses: shivammathur/setup-php@v2
                with:
                    coverage: "none"
                    php-version: "${{ matrix.php }}"

            -   name: Configure stability
                if: "matrix.min_stability != ''"
                run: composer config minimum-stability "${{ matrix.min_stability }}"

            -   name: force Symfony version
                run: composer require "symfony/symfony:${{ matrix.symfony_version }}" --no-update
                if: "matrix.symfony_version != ''"

            -   name: Install dependencies
                run: composer update --ansi --no-progress --prefer-dist --no-interaction ${{ matrix.composer_flags }}

            -   name: Run tests
                run: vendor/bin/phpunit -v --colors=always
